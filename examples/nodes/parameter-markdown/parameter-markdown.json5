{
  type: "Article",
  content: [
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Examples of the parameter type can be inferred from options when using Markdown." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "No options and no type, so no validator: " }
        },
        {
          type: "Parameter",
          name: "par1"
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Options only found on string parameters: " }
        },
        {
          type: "Parameter",
          name: "par1",
          validator: {
            type: "StringValidator",
            minLength: 3
          }
        },
        {
          type: "Text",
          value: { string: ", " }
        },
        {
          type: "Parameter",
          name: "par2",
          validator: {
            type: "StringValidator",
            maxLength: 5
          }
        },
        {
          type: "Text",
          value: { string: ", " }
        },
        {
          type: "Parameter",
          name: "par3",
          validator: {
            type: "StringValidator",
            pattern: "[a-z]{3,5}"
          }
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Option " }
        },
        {
          type: "CodeInline",
          code: { string: "vals" }
        },
        {
          type: "Text",
          value: { string: " is only on \"enum\" parameters: " }
        },
        {
          type: "Parameter",
          name: "par1"
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Options specified as bool: " }
        },
        {
          type: "Parameter",
          name: "par1",
          default: true,
          validator: { type: "BooleanValidator" }
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Options specified as integer: " }
        },
        {
          type: "Parameter",
          name: "par1",
          default: 1,
          validator: { type: "IntegerValidator" }
        },
        {
          type: "Text",
          value: { string: ", " }
        },
        {
          type: "Parameter",
          name: "par2",
          validator: {
            type: "IntegerValidator",
            minimum: 2
          }
        },
        {
          type: "Text",
          value: { string: ", " }
        },
        {
          type: "Parameter",
          name: "par3",
          validator: {
            type: "IntegerValidator",
            maximum: 3
          }
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Options specified as number: " }
        },
        {
          type: "Parameter",
          name: "par1",
          default: 1.1,
          validator: { type: "NumberValidator" }
        },
        {
          type: "Text",
          value: { string: ", " }
        },
        {
          type: "Parameter",
          name: "par2",
          validator: {
            type: "NumberValidator",
            exclusiveMinimum: 2.2
          }
        },
        {
          type: "Text",
          value: { string: ", " }
        },
        {
          type: "Parameter",
          name: "par3",
          validator: {
            type: "NumberValidator",
            exclusiveMaximum: 3.3
          }
        },
        {
          type: "Text",
          value: { string: ", " }
        },
        {
          type: "Parameter",
          name: "par4",
          validator: {
            type: "NumberValidator",
            multipleOf: 0.1
          }
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Options specified as date: " }
        },
        {
          type: "Parameter",
          name: "par1",
          validator: {
            type: "DateValidator",
            minimum: {
              type: "Date",
              value: "2022-02-22"
            }
          }
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Options specified as time: " }
        },
        {
          type: "Parameter",
          name: "par1",
          validator: {
            type: "TimeValidator",
            maximum: {
              type: "Time",
              value: "01:02:03"
            }
          }
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    },
    {
      type: "Paragraph",
      content: [
        {
          type: "Text",
          value: { string: "Options specified as datetime: " }
        },
        {
          type: "Parameter",
          name: "par1",
          validator: {
            type: "DateTimeValidator",
            minimum: {
              type: "DateTime",
              value: "2022-02-22T01:02:03"
            }
          }
        },
        {
          type: "Text",
          value: { string: "." }
        }
      ]
    }
  ]
}
