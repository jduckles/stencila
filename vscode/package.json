{
  "name": "stencila",
  "displayName": "Stencila",
  "publisher": "stencila",
  "description": "Documents with scientific intelligence",
  "version": "0.0.4",
  "license": "Apache-2.0",
  "author": "Stencila and contributors",
  "bugs": {
    "url": "https://github.com/stencila/stencila/issues"
  },
  "homepage": "https://github.com/stencila/stencila/tree/main/vscode#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stencila/stencila.git"
  },
  "icon": "icons/stencila-128.png",
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Data Science",
    "Visualization",
    "Notebooks"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "authentication": [
      {
        "id": "stencila",
        "label": "Stencila Cloud"
      }
    ],
    "configuration": {
      "title": "Stencila",
      "properties": {
        "stencila.user.name": {
          "order": 1,
          "type": "string",
          "default": "",
          "description": "Your full name (optional). Used when attributing document changes."
        },
        "stencila.user.affiliations": {
          "order": 2,
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Your professional affiliations (optional). You can add multiple affiliations. Used when attributing document changes."
        },
        "stencila.user.object": {
          "order": 3,
          "description": "Advanced. A https://schema.org/Person object representing you, used when attributing document changes. Overrides other `user` settings above.",
          "type": [
            "object",
            "null"
          ],
          "default": null,
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "const": "Person"
            },
            "givenNames": {
              "type": "string"
            },
            "familyNames": {
              "type": "string"
            },
            "affiliations": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "name"
                ],
                "properties": {
                  "type": {
                    "const": "Organization"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "stencila.languageServer.logLevel": {
          "order": 4,
          "description": "The logging level of the Stencila Language Server (server restart required)",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error"
          ],
          "default": "info"
        }
      }
    },
    "commands": [
      {
        "command": "stencila.new-smd",
        "category": "Create",
        "title": "New Stencila Markdown Document",
        "shortTitle": "Stencila Markdown",
        "icon": "$(new-file)"
      },
      {
        "command": "stencila.new-myst",
        "category": "Create",
        "title": "New MyST Document",
        "shortTitle": "MyST",
        "icon": "$(new-file)"
      },
      {
        "command": "stencila.view-doc",
        "category": "Stencila",
        "title": "Preview Document",
        "shortTitle": "Preview doc",
        "icon": "$(preview)"
      },
      {
        "command": "stencila.invoke.run-curr",
        "category": "Stencila",
        "title": "Run this node",
        "shortTitle": "Run node",
        "icon": "$(run)"
      },
      {
        "command": "stencila.invoke.run-above",
        "category": "Stencila",
        "title": "Run nodes above and then this node",
        "shortTitle": "Run above",
        "icon": "$(run-above)"
      },
      {
        "command": "stencila.invoke.run-below",
        "category": "Stencila",
        "title": "Run this node and then nodes below",
        "shortTitle": "Run below",
        "icon": "$(run-below)"
      },
      {
        "command": "stencila.invoke.run-doc",
        "category": "Stencila",
        "title": "Run document",
        "shortTitle": "Run doc",
        "icon": "$(run-all)"
      },
      {
        "command": "stencila.invoke.run-code",
        "category": "Stencila",
        "title": "Run code nodes in document",
        "shortTitle": "Run code",
        "icon": "$(zap)"
      },
      {
        "command": "stencila.invoke.run-instruct",
        "category": "Stencila",
        "title": "Run instruction nodes in document",
        "shortTitle": "Run instructions",
        "icon": "$(sparkle)"
      },
      {
        "command": "stencila.invoke.cancel-curr",
        "category": "Stencila",
        "title": "Cancel node",
        "icon": "$(stop)"
      },
      {
        "command": "stencila.invoke.cancel-doc",
        "category": "Stencila",
        "title": "Cancel all running nodes in the document",
        "shortTitle": "Cancel all",
        "icon": "$(stop)"
      },
      {
        "command": "stencila.invoke.lock-curr",
        "category": "Stencila",
        "title": "Lock this node",
        "shortTitle": "Lock node",
        "icon": "$(lock)"
      },
      {
        "command": "stencila.invoke.unlock-curr",
        "category": "Stencila",
        "title": "Unlock this node",
        "shortTitle": "Unlock node",
        "icon": "$(unlock)"
      },
      {
        "command": "stencila.invoke.export-doc",
        "category": "Stencila",
        "title": "Export document",
        "shortTitle": "Export doc",
        "icon": "$(export)"
      },
      {
        "command": "stencila.secrets.set",
        "category": "Stencila",
        "title": "Set secret"
      },
      {
        "command": "stencila.secrets.delete",
        "category": "Stencila",
        "title": "Delete secret"
      },
      {
        "command": "stencila.lsp-server.restart",
        "category": "Stencila",
        "title": "Restart Language Server"
      },
      {
        "command": "stencila.lsp-server.logs",
        "category": "Stencila",
        "title": "Language Server Logs"
      },
      {
        "command": "stencila.cloud.signin",
        "category": "Stencila Cloud",
        "title": "Sign in",
        "icon": "$(sign-in)"
      },
      {
        "command": "stencila.cloud.signout",
        "category": "Stencila Cloud",
        "title": "Sign out",
        "icon": "$(sign-out)"
      },
      {
        "command": "stencila.settings",
        "category": "Stencila",
        "title": "Settings"
      }
    ],
    "keybindings": [
      {
        "command": "stencila.invoke.run-curr",
        "key": "ctrl+enter",
        "when": "editorTextFocus"
      },
      {
        "command": "stencila.invoke.run-above",
        "key": "ctrl+1 enter",
        "when": "editorTextFocus"
      },
      {
        "command": "stencila.invoke.run-below",
        "key": "ctrl+2 enter",
        "when": "editorTextFocus"
      },
      {
        "command": "stencila.invoke.run-doc",
        "key": "ctrl+shift+enter",
        "when": "editorTextFocus"
      },
      {
        "command": "stencila.command-picker",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s"
      }
    ],
    "menus": {
      "file/newFile": [
        {
          "command": "stencila.new-smd",
          "group": "Document"
        },
        {
          "command": "stencila.new-myst",
          "group": "Document"
        }
      ],
      "commandPalette": [
        {
          "command": "stencila.new-smd"
        },
        {
          "command": "stencila.new-myst"
        },
        {
          "command": "stencila.view-doc",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-curr",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-above",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-below",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-doc",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-code",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-instruct",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.cancel-curr",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.cancel-doc",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.lock-curr",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.unlock-curr",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.export-doc",
          "when": "editorLangId == smd || editorLangId == myst"
        }
      ],
      "editor/title/run": [
        {
          "command": "stencila.view-doc",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-doc",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-code",
          "when": "editorLangId == smd || editorLangId == myst"
        },
        {
          "command": "stencila.invoke.run-instruct",
          "when": "editorLangId == smd || editorLangId == myst"
        }
      ],
      "editor/context": [
        {
          "command": "stencila.invoke.run-curr",
          "when": "editorLangId == smd || editorLangId == myst",
          "group": "000-Stencila@1"
        },
        {
          "command": "stencila.invoke.run-above",
          "when": "editorLangId == smd || editorLangId == myst",
          "group": "000-Stencila@2"
        },
        {
          "command": "stencila.invoke.run-below",
          "when": "editorLangId == smd || editorLangId == myst",
          "group": "000-Stencila@3"
        },
        {
          "command": "stencila.invoke.lock-curr",
          "when": "editorLangId == smd || editorLangId == myst",
          "group": "000-Stencila@4"
        },
        {
          "command": "stencila.invoke.unlock-curr",
          "when": "editorLangId == smd || editorLangId == myst",
          "group": "000-Stencila@5"
        },
        {
          "command": "stencila.invoke.run-doc",
          "when": "editorLangId == smd || editorLangId == myst",
          "group": "001-Stencila@1"
        },
        {
          "command": "stencila.invoke.export-doc",
          "when": "editorLangId == smd || editorLangId == myst",
          "group": "001-Stencila@2"
        }
      ]
    },
    "languages": [
      {
        "id": "smd",
        "aliases": [
          "Stencila Markdown"
        ],
        "extensions": [
          ".smd"
        ],
        "configuration": "./syntaxes/smd/configuration.json",
        "icon": {
          "light": "./icons/stencila-128.png",
          "dark": "./icons/stencila-128.png"
        }
      },
      {
        "id": "myst",
        "aliases": [
          "MyST"
        ],
        "extensions": [
          ".myst"
        ],
        "configuration": "./syntaxes/myst/configuration.jsonc",
        "icon": {
          "light": "./icons/myst-128.png",
          "dark": "./icons/myst-128.png"
        }
      }
    ],
    "grammars": [
      {
        "language": "smd",
        "scopeName": "source.smd",
        "path": "./syntaxes/smd/tmGrammar.json",
        "embeddedLanguages": {
          "source.js": "javascript",
          "meta.embedded.language.css": "css",
          "meta.embedded.language.javascript": "javascript",
          "meta.embedded.language.html": "html",
          "meta.embedded.language.python": "python",
          "meta.embedded.language.r": "r",
          "meta.embedded.language.sql": "sql",
          "meta.embedded.language.tex": "latex",
          "meta.embedded.language.xml": "xml",
          "meta.embedded.block.frontmatter": "yaml"
        }
      },
      {
        "language": "myst",
        "scopeName": "source.myst",
        "path": "./syntaxes/myst/tmGrammar.json",
        "embeddedLanguages": {
          "source.js": "javascript",
          "meta.embedded.language.css": "css",
          "meta.embedded.language.javascript": "javascript",
          "meta.embedded.language.html": "html",
          "meta.embedded.language.python": "python",
          "meta.embedded.language.r": "r",
          "meta.embedded.language.sql": "sql",
          "meta.embedded.language.tex": "latex",
          "meta.embedded.language.xml": "xml",
          "meta.embedded.block.frontmatter": "yaml"
        }
      }
    ],
    "snippets": [
      {
        "language": "smd",
        "path": "./syntaxes/smd/snippets.json"
      },
      {
        "language": "myst",
        "path": "./syntaxes/myst/snippets.jsonc"
      }
    ],
    "themes": [
      {
        "id": "StencilaLight",
        "label": "Stencila Light",
        "uiTheme": "vs",
        "path": "./themes/stencila-light-color-theme.json"
      }
    ],
    "walkthroughs": [
      {
        "title": "Math in Stencila Markdown",
        "description": "Creating math equations using TeX, AsciiMath and LLMs in Stencila Markdown.",
        "format": "smd",
        "id": "math-smd",
        "steps": [
          {
            "title": "Setting Up",
            "id": "step0",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• This is an interactive walkthrough. Click on the links below to create a document and add content to it.\n\n• First, create a new, empty Stencila Markdown [file](command:stencila.walkthrough.open?%22smd%22).\n\n• You can preview the rendered document by clicking on the $(preview) icons that will appear in the Markdown when you add content, or by using ``Stencila: Preview document`` command.\n"
          },
          {
            "title": "Using TeX",
            "id": "step1",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• Stencila Markdown supports display math TeX equations surrounded by double dollars [like this](command:stencila.walkthrough.type?%5B%22smd%22%2C%22%5CnThe%20area%20of%20a%20circle%20is%2C%5Cn%5Cn%24%24%5CnA%20%3D%20%5C%5Cpi%20r%5E2%5Cn%24%24%5Cn%22%5D).\n\n• You can also [add](command:stencila.walkthrough.type?%5B%22smd%22%2C%22%5Cnwhere%20%24r%24%20is%20the%20radius%20of%20the%20circle.%5Cn%22%5D) inline math within paragraphs using single dollars.\n\n"
          },
          {
            "title": "Using AsciiMath",
            "id": "step2",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• Stencila Markdown also supports writing math using AsciiMath, a simpler syntax than TeX.\n\n• [Add](command:stencila.walkthrough.type?%5B%22smd%22%2C%22%5CnThe%20circumference%20of%20a%20circle%20is%2C%5Cn%5Cn%60%60%60asciimath%5CnC%20%3D%202%20pi%20r%5Cn%60%60%60%5Cn%22%5D) display AsciiMath equations using a code block with ``asciimath`` as the language.\n\n• You can also [add](command:stencila.walkthrough.type?%5B%22smd%22%2C%22%5Cnwhere%20%60r%60%7Basciimath%7D%20is%20the%20radius%20of%20the%20circle.%5Cn%22%5D) inline AsciiMath within paragraphs.\n\n"
          },
          {
            "title": "Using LLMs",
            "id": "step3",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• The ``stencila/create/math-block`` prompt is specialized to write display math blocks. It will default to using TeX unless you specify AsciiMath or MathML.\n\n• The prompt makes use of the document context, including the preceding paragraph, and the math symbols used previously. This means you don't need to repeat youself when writing instructions\n\n• To illustrate, let's [add](command:stencila.walkthrough.type?%5B%22smd%22%2C%22%5CnThe%20probability%20density%20function%20for%20the%20normal%20distribution%20is%2C%5Cn%5Cn%3A%3A%3A%20create%20equation%5Cn%22%5D) a paragraph, followed by an instruction to create a new equation. Press the $(run) icon to execute the instruction using a LLM.\n\n"
          }
        ]
      },
      {
        "title": "Mermaid in Stencila Markdown",
        "description": "Creating diagrams using Mermaid and LLMs in Stencila Markdown.",
        "format": "smd",
        "id": "mermaid-smd",
        "steps": [
          {
            "title": "Setting Up",
            "id": "step0",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• This is an interactive walkthrough. Click on the links below to create a document and add content to it.\n\n• First, create a new, empty Stencila Markdown [file](command:stencila.walkthrough.open?%22smd%22).\n\n• You can preview the document by clicking on the $(preview) icons that will appear in the Markdown, or by using the ``Stencila: Preview document`` command.\n"
          },
          {
            "title": "Creating diagrams manually",
            "id": "step1",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• Mermaid is a JavaScript library that renders diagrams and flowcharts from Markdown-like text, simplifying the creation of visualization for technical documentation.\n\n• [Add](command:stencila.walkthrough.type?%5B%22smd%22%2C%22%5Cn%60%60%60mermaid%20exec%5Cngraph%20LR%5Cn%20%20%20%20User%20--%3E%20%7CInteracts%20with%7C%20Frontend%5Cn%20%20%20%20Frontend%20--%3E%20%7CSends%20requests%7C%20Backend%5Cn%20%20%20%20Backend%20--%3E%20%7CQueries%7C%20Database%5Cn%20%20%20%20Backend%20--%3E%20%7CReturns%20data%7C%20Frontend%5Cn%60%60%60%5Cn%22%5D) a Mermaid diagram to your document using an code block with ``mermaid`` as the language and the ``exec`` keyword.\n\n• Check out the excellent Mermaid documentation for details on the syntax and variety of diagrams available.\n\n"
          },
          {
            "title": "Using LLMs to create diagrams",
            "id": "step2",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• Stencila has several built-in prompts specialized for creating certain types of Mermaid diagrams.\n\n• For example, the ``stencila/create/figure-flowchart`` prompt is specialized to create flowchards. It makes use of the document context, including metadata and the preceding paragraph. This means you don't need to repeat youself when writing instructions.\n\n• To illustrate this, let's [add](command:stencila.walkthrough.type?%5B%22smd%22%2C%22%5CnCell%20culture%20involves%20isolating%20cells%20from%20an%20organism%2C%20providing%20them%20with%20necessary%20nutrients%2C%20and%20maintaining%20controlled%20environmental%20conditions%20to%20support%20cell%20growth%2C%20proliferation%2C%20and%20viability%20in%20vitro.%5Cn%5Cn%3A%3A%3A%20create%20%40figure-flowchart%5Cn%22%5D) a paragraph, followed by an instruction to create a new flowchart. Press the $(run) icon to execute the instruction using a LLM.\n\n• Note that as well as generating the Mermaid code, this prompt wraps it in a figure and add a caption that is based on the document context.\n\n• If you don't like the suggested provided by the LLM, you can add feedback after the ``suggest`` keyword and press the $(refresh) icon (or do the same in the preview window).\n\n"
          },
          {
            "title": "Using LLMs to edit diagrams",
            "id": "step3",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• In addition to helping create Mermaid diagrams, LLMs can be useful for editing and refining them.\n\n• Lets say that you have written a diagram photosynthsis but want to change the color of some blocks.\n\n• [Insert](command:stencila.walkthrough.type?%5B%22smd%22%2C%22%5Cn%3A%3A%3A%20edit%20make%20photosynthesis%20light%20green%20and%20glucose%20light%20red%20%3E%5Cn%5Cn%60%60%60mermaid%20exec%5Cngraph%20TD%5Cn%20%20%20%20A%5BLight%20Energy%5D%20--%3E%20B%7BPhotosynthesis%7D%5Cn%20%20%20%20B%20--%3E%20C%5BLight%20Reactions%5D%5Cn%20%20%20%20C%20--%3E%20D%5BATP%5D%5Cn%20%20%20%20C%20--%3E%20E%5BNADPH%5D%5Cn%20%20%20%20B%20--%3E%20F%5BCarbon%20Fixation%5D%5Cn%20%20%20%20F%20--%3E%20G%5BCalvin%20Cycle%5D%5Cn%20%20%20%20G%20--%3E%20H%5BGlucose%5D%5Cn%20%20%20%20D%20--%3E%20G%5Cn%20%20%20%20E%20--%3E%20G%5Cn%60%60%60%5Cn%22%5D) an ``edit`` instruction immediately before the diagram and ending with a ``>`` character (to indicate that you want to edit the following block only). Press $(play) to run the instruction.\n\n"
          }
        ]
      }
    ]
  },
  "scripts": {
    "fix": "eslint src --ext ts --fix",
    "lint": "eslint src --ext ts",
    "compile-cli": "cargo build --bin stencila",
    "compile-dist": "cd ../web/ && npm run build:vscode",
    "compile-syntaxes": "node syntaxes/smd/compile.js && node syntaxes/myst/compile.js",
    "compile-ts": "tsc -p ./",
    "compile-walkthroughs": "node walkthroughs/compile.js",
    "compile": "npm run compile-cli && npm run compile-dist && npm run compile-syntaxes && npm run compile-walkthroughs && npm run compile-ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "vscode-test",
    "build": "npm run compile-dist && npm run compile-syntaxes && npm run compile-walkthroughs && npm run compile-ts",
    "package": "npm run package-vsix"
  },
  "dependencies": {
    "vscode-languageclient": "9.0.1"
  },
  "devDependencies": {
    "@types/mocha": "10.0.9",
    "@types/node": "20.x",
    "@types/vscode": "1.84.0",
    "@typescript-eslint/eslint-plugin": "8.8.1",
    "@typescript-eslint/parser": "8.8.1",
    "@vscode/test-cli": "0.0.10",
    "@vscode/test-electron": "2.4.1",
    "@vscode/vsce": "3.1.1",
    "eslint": "8.57.1",
    "js-yaml": "4.1.0"
  }
}