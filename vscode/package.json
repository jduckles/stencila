{
  "name": "stencila",
  "id": "stencila.extension.editor",
  "publisher": "stencila",
  "displayName": "Stencila",
  "description": "Programmable, reproducible, interactive documents",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.88.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "categories": [
      "Programming Languages",
      "Snippets",
      "Data Science",
      "Visualization",
      "Notebooks"
    ],
    "activationEvents": [
      "onLanguage:smd",
      "onCommand:stencila.walkthrough-file-open",
      "workspaceContains:**/*.smd",
      "*"
    ],
    "configuration": {
      "title": "Stencila Configuration",
      "properties": {
        "stencila.user": {
          "description": "Your details to use as author information.",
          "type": "object",
          "properties": {
            "givenNames": {
              "type": "string"
            },
            "familyNames": {
              "type": "string"
            },
            "affiliations": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "commands": [
      {
        "command": "stencila.view-doc",
        "title": "Stencila: Preview document",
        "shortTitle": "Preview document",
        "icon": "$(preview)"
      },
      {
        "command": "stencila.invoke.run-curr",
        "title": "Stencila: Run the current node",
        "shortTitle": "Run current",
        "icon": "$(run)"
      },
      {
        "command": "stencila.invoke.run-all-doc",
        "title": "Stencila: Run all nodes in document",
        "shortTitle": "Run all",
        "icon": "$(run-all)"
      },
      {
        "command": "stencila.invoke.run-code-doc",
        "title": "Stencila: Run all executable code nodes in document",
        "shortTitle": "Run all code",
        "icon": "$(zap)"
      },
      {
        "command": "stencila.invoke.run-assist-doc",
        "title": "Stencila: Run all assistant nodes in document",
        "shortTitle": "Run all assist",
        "icon": "$(sparkle)"
      },
      {
        "command": "stencila.invoke.run-all-above",
        "title": "Stencila: Run all nodes above the cursor",
        "shortTitle": "Run all above",
        "icon": "$(run-above)"
      },
      {
        "command": "stencila.invoke.run-all-below",
        "title": "Stencila: Run all nodes below the cursor",
        "shortTitle": "Run all below",
        "icon": "$(run-below)"
      },
      {
        "command": "stencila.invoke.cancel-curr",
        "title": "Stencila: Cancel current",
        "icon": "$(stop)"
      },
      {
        "command": "stencila.invoke.cancel-all-doc",
        "title": "Stencila: Cancel all running nodes in the document",
        "shortTitle": "Cancel all",
        "icon": "$(stop)"
      },
      {
        "command": "stencila.invoke.export-doc",
        "title": "Stencila: Export the document",
        "shortTitle": "Export",
        "icon": "$(export)"
      }
    ],
    "keybindings": [
      {
        "command": "stencila.invoke.run-curr",
        "key": "Crtl+Enter"
      },
      {
        "command": "stencila.invoke.run-all-doc",
        "key": "Crtl+Shift+Enter"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "stencila.view-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-curr",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-all-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-code-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-assist-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-all-above",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-all-below",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.cancel-all-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.cancel-curr",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.cancel-all-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.export-doc",
          "when": "editorLangId == smd"
        }
      ],
      "editor/title/run": [
        {
          "command": "stencila.view-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-all-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-code-doc",
          "when": "editorLangId == smd"
        },
        {
          "command": "stencila.invoke.run-assist-doc",
          "when": "editorLangId == smd"
        }
      ],
      "editor/context": [
        {
          "command": "stencila.invoke.export-doc",
          "when": "editorLangId == smd"
        }
      ]
    },
    "languages": [
      {
        "id": "smd",
        "aliases": [
          "Stencila Markdown"
        ],
        "extensions": [
          ".smd"
        ],
        "configuration": "./syntaxes/smd/configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "smd",
        "scopeName": "source.smd",
        "path": "./syntaxes/smd/tmGrammar.json",
        "embeddedLanguages": {
          "source.js": "javascript",
          "meta.embedded.language.css": "css",
          "meta.embedded.language.javascript": "javascript",
          "meta.embedded.language.python": "python",
          "meta.embedded.language.r": "r",
          "meta.embedded.language.sql": "sql",
          "meta.embedded.language.tex": "latex",
          "meta.embedded.block.frontmatter": "yaml"
        }
      }
    ],
    "snippets": [
      {
        "language": "smd",
        "path": "./syntaxes/smd/snippets.json"
      }
    ],
    "themes": [
      {
        "id": "StencilaLight",
        "label": "Stencila light",
        "uiTheme": "vs",
        "path": "./themes/stencila-light-color-theme.json"
      }
    ],
    "iconThemes": [
      {
        "id": "StencilaIcons",
        "label": "Stencila Icons",
        "path": "./icons/stencila-icon-theme.json"
      }
    ],
    "walkthroughs": [
      {
        "title": "Getting help writing code",
        "description": "Generating and running code.\n",
        "id": "code-chunks-and-text",
        "steps": [
          {
            "title": "Generating Code and Text",
            "id": "step1",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• Let's write a short scientific [document](command:stencila.walkthrough-file-open?%22code-chunks-and-text.smd%22).\n\n• We're going to write about modeling [Predator Prey interactions](command:stencila.walkthrough-file-type?%5B%22code-chunks-and-text.smd%22%2C%22---%5Cntitle%3A%20Predator%20Prey%20Systems%5Cnkeywords%3A%20%5B%5C%22predator%5C%22%2C%20%5C%22prey%5C%22%2C%20%5C%22population%20dynamics%5C%22%5D%5Cn---%5Cn%22%5D).\n\n• We'll use the ``insert-expand-ideas`` assistant to write a coherent narrative based on a [few ideas](command:stencila.walkthrough-file-type?%5B%22code-chunks-and-text.smd%22%2C%22%5Cn%3A%3A%3A%20do%20%40edit-expand-ideas%5Cn%3A%3A%3A%20with%5Cn%5Cn-%20brief%20history%20of%20lotka-volterra%20equations%5Cn-%20explain%20the%20model%20and%20its%20relevance.%5Cn-%20A%20puzzle%3B%20but%20turns%20out%20explicable%20just%20by%20equations%5Cn-%20fox%20and%20rabbit%20example%5Cn%5Cn%3A%3A%3A%5Cn%22%5D).\n\n• If you press the run button, the assistant will generate a few paragraphs of text, attempting to connect the ideas.\n\n• A graph will help show what is going on. So let's generate [some relevant code](command:stencila.walkthrough-file-type?%5B%22code-chunks-and-text.smd%22%2C%22%5Cn%3A%3A%3A%20do%20%40insert-code-figure%20plot%20of%20the%20population%20dynamics%20of%20foxes%20and%20rabbits%2C%20showing%20a%20few%20cycles%2C%20put%20the%20parameters%20and%20initial%20conditions%20in%20the%20caption.%5Cn%22%5D).\n\n• The assistant will generate a code snippet that plots the population dynamics of foxes and rabbits.\n\n• You can then run that code to see the actual plot. Press the view button to open the document.\n\n"
          }
        ]
      },
      {
        "title": "Writing with the `insert-paras` assistant",
        "description": "The ``insert-paras`` specialized assistant uses context from your document to make generic AI more relevant and accurate.\n",
        "id": "demo-insert-paras",
        "steps": [
          {
            "title": "Getting started",
            "id": "step1",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• The ``insert-paras`` is one of Stencila's specialized AI assistants. It summarizes context from your document, including metadata and content, and passes it to generic LLMs.\n\n• First, create a new Stencila Markdown [file](command:stencila.walkthrough-file-open?%22demo-insert-paras.smd%22)\n\n• [Add some metadata](command:stencila.walkthrough-file-type?%5B%22demo-insert-paras.smd%22%2C%22---%5Cntitle%3A%20An%20analysis%20of%20impact%20of%20environmental%20variables%20on%20tree%20height%5Cngenre%3A%20Scientific%20journal%20article%5Cnkeywords%3A%20tree%2C%20height%2C%20environmental%20variables%5Cn---%22%5D) to the document to help guide the assistant to produce relevant content.\n\n• Next, get started by [adding a heading and an instruction](command:stencila.walkthrough-file-type?%5B%22demo-insert-paras.smd%22%2C%22%5Cn%5Cn%23%20Introduction%5Cn%5Cn%3A%3A%3A%20do%20%40insert-paras%2020-40%20word%20introductory%20paragraph%5Cn%5Cn%22%5D), and assigned to ``insert-paras``\n\n• Run the instruction.\n\n"
          },
          {
            "title": "Refining suggestions",
            "id": "step2",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\n• If you are happy with the suggestion from ``insert-paras``, you can accept it. This will stop the instruction from being executed again (unless you explicitly do so).\n\n• If you are __not__ happy with the suggestion you can request a retry, modify the instruction, or edit the suggestion.\n\n• You can click on the ```View`` button to inspect the instruction.\n"
          }
        ]
      },
      {
        "title": "Frictionless AI Integration",
        "description": "Getting started with Stencila's AI Assistants",
        "id": "walkthru-1",
        "steps": [
          {
            "title": "Stencila uses Markdown",
            "id": "step1",
            "media": {
              "image": "walkthroughs/blank.svg",
              "altText": ""
            },
            "description": "\n\nLet's create some basic markdown.\n\nStarting with [a title](command:stencila.walkthrough-file-type?%5B%22walkthru-1.smd%22%2C%22%5Cn%23%20A%20simple%20document%5Cn%22%5D)\n\nAnd then some [formatted text](command:stencila.walkthrough-file-type?%5B%22walkthru-1.smd%22%2C%22%5CnWe%20can%20write%20some%20text%20with%20__formatting__%20and%20%5Blinks%5D%28https%3A%2F%2Fstencila.com%29.%5Cn%22%5D)\n\nNow we can [add some code](command:stencila.walkthrough-file-type?%5B%22walkthru-1.smd%22%2C%22%5Cn%60%60%60python%20exec%5Cnprint%28%5C%22Hello%20world!%5C%22%29%5Cn%60%60%60%5Cn%22%5D)\n\nLet's run that code. It is kinda like a notebook.\n\nWe can get assistance in [writing code](command:stencila.walkthrough-file-type?%5B%22walkthru-1.smd%22%2C%22%20%5Cn%5Cn%3A%3A%3A%20do%20%40insert-code-chunk%20draw%20a%20sine%20wave%22%5D)\n\nAnd now we can run that too.\n\nThat is just the beginning.\n\n"
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile-dist": "cd ../web/ && npm run build:vscode",
    "compile-syntaxes": "node syntaxes/smd/compile.js",
    "compile-ts": "tsc -p ./",
    "compile-walkthroughs": "node walkthroughs/compile.js",
    "compile": "npm run compile-dist && npm run compile-syntaxes && npm run compile-walkthroughs && npm run compile-ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "dependencies": {
    "vscode-languageclient": "9.0.1"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "20.x",
    "@types/vscode": "^1.88.0",
    "@typescript-eslint/eslint-plugin": "^7.4.0",
    "@typescript-eslint/parser": "^7.4.0",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.57.0",
    "js-yaml": "^4.1.0",
    "typescript": "^5.3.3"
  }
}