{
  "$schema": "https://stencila.org/meta.schema.json",
  "$id": "https://stencila.org/Variable.schema.json",
  "@id": "stencila:Variable",
  "title": "Variable",
  "extends": [
    "Entity"
  ],
  "category": "flow",
  "description": "A variable representing a name / value pair.",
  "status": "under-development",
  "required": [
    "type",
    "name"
  ],
  "core": [
    "id",
    "programmingLanguage",
    "nativeType",
    "nodeType",
    "value",
    "valueHint"
  ],
  "properties": {
    "type": {
      "@id": "schema:type",
      "description": "The type of this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@type` keyword.\n",
      "type": "string"
    },
    "id": {
      "@id": "schema:id",
      "description": "The identifier for this item.",
      "$comment": "This is a special property analogous to JSON-LD's `@id` keyword.\n",
      "strip": [
        "metadata"
      ],
      "html": {
        "attr": "id"
      },
      "type": "string"
    },
    "name": {
      "@id": "schema:name",
      "description": "The name of the variable.",
      "$comment": "This regex allows for snake_case and camelCase names but excludes\nPascalCase for names.\n",
      "type": "string",
      "pattern": "[a-zA-Z][a-zA-Z0-9_]*"
    },
    "programmingLanguage": {
      "@id": "schema:programmingLanguage",
      "description": "The programming language that the variable is defined in e.g. Python, JSON.",
      "aliases": [
        "programming-language",
        "programming_language"
      ],
      "type": "string"
    },
    "nativeType": {
      "@id": "stencila:nativeType",
      "description": "The native type of the variable e.g. `float`, `datetime.datetime`, `pandas.DataFrame`",
      "aliases": [
        "native-type",
        "native_type"
      ],
      "type": "string"
    },
    "nodeType": {
      "@id": "stencila:nodeType",
      "description": "The Stencila node type of the variable e.g. `Number`, `DateTime`, `Datatable`.",
      "aliases": [
        "node-type",
        "node_type"
      ],
      "type": "string"
    },
    "value": {
      "@id": "schema:value",
      "description": "The value of the variable.",
      "$ref": "Node.schema.json"
    },
    "valueHint": {
      "@id": "stencila:valueHint",
      "description": "A hint for the value of the variable.",
      "$comment": "The type of this hint depends on the type of the variable. For strings, arrays and objects\nit will be their length. For `Datatable`s it will be a copy of the table, including\nits column names and types, but with no data. \n",
      "aliases": [
        "value-hint",
        "value_hint"
      ],
      "$ref": "Node.schema.json"
    }
  }
}